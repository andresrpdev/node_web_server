* {
    font-family: 'Noto Serif', serif;
}

body {
    background-color: rgb(233, 233, 233);
 /* La propiedad "display: flex;" establece el modelo de caja flexible en un elemento.
    Esto permite que sus hijos directos (elementos flex) se posicionen y se alineen
    de forma más versátil que el modelo de caja en bloque estándar. */
    display: flex;

    /* "flex-direction: column;" determina la dirección principal en la que los hijos flex 
    (elementos directos dentro del contenedor flex) se colocan en el contenedor. En este caso,
    se colocan en una dirección de columna (uno debajo del otro), en lugar de la 
    dirección de fila predeterminada (uno al lado del otro). */
    flex-direction: column;

    /* "align-items: center;" alinea los hijos flex a lo largo del eje transversal, 
    que es horizontal en este caso debido a "flex-direction: column;". "center" 
    significa que se centrarán horizontalmente en el contenedor. */
    align-items: center;

    /* "justify-content: center;" alinea los hijos flex a lo largo del eje principal,
    que es vertical en este caso debido a "flex-direction: column;". "center" 
    significa que se centrarán verticalmente en el contenedor. */
    justify-content: center;

    /* "height: 100vh;" establece la altura del elemento al 100% del alto de la ventana 
    del navegador. "vh" es una unidad relativa al viewport que representa el 1% 
    de la altura del viewport. Entonces, 100vh es igual al 100% de la altura del viewport. */
    height: 100vh;

    /* "margin: 0;" elimina cualquier margen que el cuerpo pueda tener por defecto. 
    Esto asegura que el elemento ocupe todo el alto y ancho disponible. */
    margin: 0;
}

input {
    background-color: rgb(224, 224, 224);
}

input:hover{
    background-color: rgb(170, 170, 170) ;
}

h1 {
text-align: center;
margin-top: -30px;
}


.subtitle{
    color: red,

}

div.espacio3D {
    width: 300px;
    height: 300px;
    margin: 3em auto 0 auto;
    border: 1px solid rgba(0, 255, 0, 0.5);
    position: relative;
    perspective-origin: center -50%;
    perspective: 500px;
    transform: scale(0.75);
}

div.cubo3D {
    width: 100%;
    height: 100%;
    position: absolute;
    transform-style: preserve-3d;
    transform: translateZ(-150px);
    animation-name: gira;
    animation-duration: 1000ms;
    animation-iteration-count: unset;
}

p{
    display: inline;
  
}

div.cubo3D:hover {
    animation-iteration-count: infinite;
}

div.base {
    position: absolute;
    width: 150px;
    height: 150px;
    background-color: rgba(0, 0, 0, 0.15);
    transform: translateX(75px) translateY(75px) rotateX(90deg) translateZ(-200px);
    box-shadow: 0 0 50px 100px rgba(0, 0, 0, 0.15);
}

aside.cara {
    position: absolute;
    width: 298px;
    height: 298px;
    background-color: rgba(255, 150, 0, 0.25);
    border: 1px solid rgba(255, 150, 0, 0.75);
    color: rgb(0, 0, 0);
    font-size: 3em;
    text-align: center;
    line-height: 298px;
    box-shadow: 0px 0px 5px rgba(255, 150, 0, 0.75);
}

#reset{
    margin-top: 10px;
}

aside.cara1 {
    /* Frente */
    transform: translateZ(150px);
}

aside.cara2 {
    /* Atrás */
    transform: rotateY(180deg) translateZ(150px);
}

aside.cara3 {
    /* Izquierda */
    transform: rotateY(-90deg) translateZ(150px);
}

aside.cara4 {
    /* derecha */
    transform: rotateY(90deg) translateZ(150px);
}

aside.cara5 {
    /* abajo */
    transform: rotateX(-90deg) translateZ(150px);
}

aside.cara6 {
    /* arriba */
    transform: rotateX(90deg) translateZ(150px);
}

@keyframes gira {
    0% {
        transform: translateZ(-150px) rotateY(0deg);
    }

    100% {
        transform: translateZ(-150px) rotateY(360deg);
    }
}

.dark {
    background-color: black;
    color: antiquewhite;
}

.dark aside.cara {
    position: absolute;
    width: 298px;
    height: 298px;
    background-color: rgba(154, 235, 255, 0.301);
    border: 2px solid rgb(4, 0, 255);
    color: rgb(207, 167, 167);
    font-size: 3em;
    text-align: center;
    line-height: 298px;
    box-shadow: 0px 0px 5px rgba(108, 170, 250, 0.75);
}

.switch{
    position: absolute;
    top: 10px;  /* ajusta según tus necesidades */
    right: 10px; /* ajusta según tus necesidades */
    z-index: 1000; /* asegurarse de que esté por encima de otros elementos */
    display: inline-block;
    width: 60px;
    height: 34px;
}

.switch output{
    opacity: 0;
    width: 0;
    height: 0;
}

.slider{
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #9a86fd;
    border-radius:  34px;
    -webkit-transition: 0.4s;
    transition: 0.4s;
}

.slider::before{
    position: absolute;
    content: '';
    left: 4px;
    bottom: 4px;
    height: 26px;
    width: 26px;
    background-color: #fff;
    border-radius: 50%;
    -webkit-transition: 0.4s;
    transition: 0.4s;
}

input:checked+.slider{
    background-color: #ffdb70;
}

input:focus+.slider{
    box-shadow: 0 0 1px #ffdb70;
}

input:checked+.slider::before{
    -webkit-transform: translateX(26px);
    -ms-transform: translateX(26px);
    transform: translateX(26px);
}